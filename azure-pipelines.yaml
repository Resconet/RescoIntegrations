name: $(Date:yyMMdd)$(rev:-r)

trigger: none

parameters:
- name: Release
  type: boolean
  default: false
  displayName: Create new release

# https://marketplace.visualstudio.com/items?itemName=Hodor.hodor-alops
stages:
- stage: build_resco_integrations
  displayName: Build Resco Integrations
  variables:
    PublishArtifact: $[ne(variables['Build.Reason'], 'PullRequest')]
    Revision: $[counter(replace(variables['Build.Reason'], 'Manual', 'BatchedCI'), 1)]
  jobs:
  - job: build_bc_extension
    displayName: Build BC Extension
    pool:
      vmImage: windows-latest
    steps:
    - checkout: self
      fetchDepth: 1

    - pwsh: |
        $App = Get-Content app.json | ConvertFrom-Json
        $Version = $App.version.Substring(0, $App.version.LastIndexOf('.'))
        Write-Host "App version: $Version"
        Write-Host "##vso[task.setvariable variable=AppVersion;isOutput=true]$Version"
      displayName: Set Up App Version
      name: setup

    - task: ALOpsInfo@1
      displayName: Print Info

    - task: ALOpsDockerCreate@1
      displayName: Create Docker Image
      inputs:
        artifacttype: Sandbox
        imageprefix: resco.integrations

    - task: ALOpsDockerStart@1
      displayName: Start Docker Container
      inputs:
        docker_image: $(ALOPS_BC_IMAGE)
        docker_pull: false

    - task: ALOpsDockerWait@1
      displayName: Wait for Connections
      inputs:
        search_string: Ready for connections!

    - task: ALOpsAppCompiler@1
      displayName: Build App
      inputs:
        usedocker: true
        nav_app_version: $(setup.AppVersion).$(Revision)
        publish_artifact: $(PublishArtifact)
        failed_on_warnings: true
        updatebuildnumber: false
        output_alc_logs: false

    - task: ALOpsDockerRemove@1
      displayName: Stop Docker Container
      condition: always()

- stage: release_resco_integrations
  displayName: Release Resco Integrations
  condition: and(succeeded(), ${{ parameters.Release }})
  variables:
    AppVersion: $[ stageDependencies.build_resco_integrations.build_bc_extension.outputs['setup.AppVersion'] ]
  jobs:
  - deployment: release_bc_extension
    displayName: Release BC Extension
    environment: Resco Release
    pool:
      vmImage: ubuntu-latest
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            displayName: Download App
            patterns: "**/*.app"

          - bash: |
              for f in $(find . -name "*.app"); do
                pushd $(dirname $f)
                zip $(Build.ArtifactStagingDirectory)/$(basename -s .app $f).zip $(basename $f)
                popd
              done
            displayName: Prepare App Assets
            workingDirectory: $(Pipeline.Workspace)

          - task: GitHubRelease@1
            displayName: Create GitHub Release
            inputs:
              gitHubConnection: Resco GitHub
              repositoryName: Resconet/RescoIntegrations
              target: master
              tagSource: userSpecifiedTag
              tag: $(AppVersion)
              title: V$(AppVersion)
              assets: $(Build.ArtifactStagingDirectory)/*.zip
              isDraft: true
              addChangeLog: false
